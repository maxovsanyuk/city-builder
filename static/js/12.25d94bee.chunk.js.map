{"version":3,"sources":["processes/auth/registration-model.ts","pages/auth/registration/styles.ts","pages/auth/registration/index.tsx"],"names":["$registerationNewUser","createEffect","user","a","MockData","push","historyPush","Wrapper","styled","div","theme","color","white","black","blueDefault","categoryOptions","fmId","id","Registration","useForm","register","handleSubmit","setValue","watch","errors","formState","formatMessage","useIntl","password","onSubmit","data","model","token","Typography","variant","className","gutterBottom","style","fontWeight","TextField","placeholder","error","firstName","label","message","required","minLength","value","maxLength","surname","email","pattern","margin","name","options","Button","type"],"mappings":"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","file":"static/js/12.25d94bee.chunk.js","sourcesContent":["import { createEffect } from 'effector'\nimport { UserInterface, MockData } from './login-model'\nimport { historyPush } from '../../services/navigation'\n\nexport const $registerationNewUser = createEffect(async (user: UserInterface) => {\n  MockData.push(user)\n  historyPush('/city-builder/login')\n})\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  width: 432px;\n  border-radius: 8px;\n  padding: 40px;\n  background: ${({ theme }) => theme.color.white};\n  color: ${({ theme }) => theme.color.black};\n  text-align: center;\n  border: 1px solid ${({ theme }) => theme.color.blueDefault};\n\n  .h-5 {\n    color: ${({ theme }) => theme.color.blueDefault};\n  }\n\n  .form-content {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-between;\n\n    .login-input {\n      margin: 10px 20px 0 20px;\n    }\n\n    .submit-btn {\n      margin: 40px 20px 0 20px !important;\n      background: ${({ theme }) => theme.color.blueDefault};\n      font-weight: 600;\n      box-shadow: none;\n    }\n\n    .btn-box {\n      display: flex;\n\n      button {\n        display: flex;\n        flex: 1;\n      }\n    }\n\n    .form-select {\n      margin: 10px 20px;\n      text-align: left;\n    }\n  }\n`\n","import * as model from 'processes/auth/registration-model'\nimport { Wrapper } from './styles'\nimport { useIntl } from 'react-intl'\nimport { useForm } from 'react-hook-form'\nimport { Button, Typography, TextField } from '@material-ui/core'\nimport { AutocompleteInput, PasswordInput, GoogleMapsLocationsInput } from 'shared/ui/molecules'\n\nconst categoryOptions = [\n  { fmId: 'citizen', id: 19924 },\n  { fmId: 'entrepreneur', id: 55924 },\n  { fmId: 'admin', id: 14324 },\n]\n\nconst Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    watch,\n    formState: { errors },\n  } = useForm<Record<string, any>>()\n\n  const { formatMessage } = useIntl()\n  const password = watch('password')\n\n  const onSubmit = handleSubmit((data: any) => model.$registerationNewUser({ ...data, token: 'JWT_TOKEN' }))\n\n  return (\n    <Wrapper>\n      <Typography variant=\"h5\" className=\"h-5\" gutterBottom style={{ fontWeight: 600 }}>\n        {formatMessage({ id: 'join.us' })}\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-content\">\n          <TextField\n            className=\"login-input\"\n            placeholder=\"Max\"\n            error={!!errors?.firstName}\n            label={!!errors?.firstName ? errors.firstName.message : formatMessage({ id: 'firstName' })}\n            required\n            {...register('firstName', {\n              required: true,\n              minLength: { value: 3, message: formatMessage({ id: 'min.length.3' }) },\n              maxLength: { value: 20, message: formatMessage({ id: 'max.length.20' }) },\n            })}\n          />\n\n          <TextField\n            className=\"login-input\"\n            placeholder=\"Ovsianiuk\"\n            error={!!errors?.surname}\n            label={!!errors?.surname ? errors.surname.message : formatMessage({ id: 'surname' })}\n            required\n            {...register('surname', {\n              required: true,\n              minLength: { value: 5, message: formatMessage({ id: 'min.length.5' }) },\n              maxLength: { value: 20, message: formatMessage({ id: 'max.length.20' }) },\n            })}\n          />\n\n          <TextField\n            className=\"login-input\"\n            placeholder=\"example@mail.com\"\n            error={!!errors?.email}\n            label={!!errors?.email ? errors.email.message : formatMessage({ id: 'email' })}\n            required\n            {...register('email', {\n              required: true,\n              minLength: { value: 10, message: formatMessage({ id: 'min.length.10' }) },\n              maxLength: { value: 30, message: formatMessage({ id: 'max.length.30' }) },\n              pattern: {\n                value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                message: 'wrong email',\n              },\n            })}\n          />\n\n          <PasswordInput password={password} register={register} errors={errors} setValue={setValue} />\n\n          <AutocompleteInput\n            style={{ margin: '4px 20px 10px 20px' }}\n            register={register}\n            name=\"authorizationType\"\n            fmId=\"authorization.type\"\n            options={categoryOptions}\n            setValue={setValue}\n            required\n          />\n\n          <GoogleMapsLocationsInput required register={register} style={{ margin: '0 20px' }} />\n\n          <div className=\"btn-box\">\n            <Button className=\"submit-btn\" variant=\"contained\" type=\"submit\" color=\"primary\">\n              {formatMessage({ id: 'registration' })}\n            </Button>\n          </div>\n        </div>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default Registration\n"],"sourceRoot":""}