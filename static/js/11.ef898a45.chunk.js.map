{"version":3,"sources":["pages/auth/login/styles.ts","pages/auth/login/index.tsx"],"names":["Wrapper","styled","div","theme","color","white","black","blueDefault","Login","useForm","register","handleSubmit","setValue","watch","errors","formState","password","formatMessage","useIntl","onSubmit","data","model","Typography","variant","gutterBottom","className","id","TextField","placeholder","error","email","label","message","required","minLength","value","maxLength","pattern","to","Button","type"],"mappings":"2JAEaA,E,MAAUC,EAAOC,IAAV,whCAIJ,qBAAGC,MAAkBC,MAAMC,SAChC,qBAAGF,MAAkBC,MAAME,SAEhB,qBAAGH,MAAkBC,MAAMG,eACjB,qBAAGJ,MAAkBC,MAAMG,eAK9C,qBAAGJ,MAAkBC,MAAMG,eAcpB,qBAAGJ,MAAkBC,MAAMG,eAShC,qBAAGJ,MAAkBC,MAAMG,e,oECgC3BC,UA9DD,WACZ,MAMIC,cALFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,MACaC,EALf,EAKEC,UAAaD,OAGTE,EAAWH,EAAM,YACfI,EAAkBC,cAAlBD,cAEFE,EAAWR,GAAa,SAACS,GAAD,OAA+BC,IAAiBD,MAE9E,OACE,eAACpB,EAAD,WACE,cAACsB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACC,UAAU,WAAhD,SACGR,EAAc,CAAES,GAAI,8BAGvB,sBAAMP,SAAUA,EAAhB,SACE,sBAAKM,UAAU,eAAf,UACE,cAACE,EAAA,EAAD,aACEF,UAAU,cACVG,YAAY,mBACZC,SAAQ,OAACf,QAAD,IAACA,OAAD,EAACA,EAAQgB,OACjBC,OAAQ,OAACjB,QAAD,IAACA,OAAD,EAACA,EAAQgB,OAAQhB,EAAOgB,MAAME,QAAUf,EAAc,CAAES,GAAI,UACpEO,UAAQ,GACJvB,EAAS,QAAS,CACpBuB,UAAU,EACVC,UAAW,CAAEC,MAAO,GAAIH,QAASf,EAAc,CAAES,GAAI,mBACrDU,UAAW,CAAED,MAAO,GAAIH,QAASf,EAAc,CAAES,GAAI,mBACrDW,QAAS,CACPF,MAAO,uEACPH,QAAS,mBAKf,cAAC,IAAD,CAAehB,SAAUA,EAAUN,SAAUA,EAAUI,OAAQA,EAAQF,SAAUA,IAEjF,cAAC,IAAD,CAAMR,MAAM,UAAUqB,UAAU,OAAOa,GAAG,iCAA1C,SACGrB,EAAc,CAAES,GAAI,sBAGvB,sBAAKD,UAAU,UAAf,UACE,cAACc,EAAA,EAAD,CAAQd,UAAU,aAAaF,QAAQ,YAAYiB,KAAK,SAASpC,MAAM,UAAvE,SACGa,EAAc,CAAES,GAAI,YAGvB,cAAC,IAAD,CAAMY,GAAG,8BAA8Bb,UAAU,WAAjD,SACE,cAACc,EAAA,EAAD,CAAQd,UAAU,aAAaF,QAAQ,YAAvC,SACGN,EAAc,CAAES,GAAI","file":"static/js/11.ef898a45.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  width: 432px;\n  border-radius: 8px;\n  padding: 40px;\n  background: ${({ theme }) => theme.color.white};\n  color: ${({ theme }) => theme.color.black};\n  text-align: center;\n  border: 1px solid ${({ theme }) => theme.color.blueDefault};\n  box-shadow: inset 0 0 2px 0 ${({ theme }) => theme.color.blueDefault};\n\n  .title-h5 {\n    margin: 20px 0 50px 0;\n    font-weight: 600;\n    color: ${({ theme }) => theme.color.blueDefault};\n  }\n\n  .form-content {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: space-between;\n\n    .login-input {\n      margin: 20px 20px 0 20px;\n    }\n\n    .submit-btn {\n      background: ${({ theme }) => theme.color.blueDefault};\n      font-weight: 600;\n      max-width: 45%;\n    }\n\n    .link {\n      text-align: left;\n      margin: 10px 20px 20px 20px;\n      text-decoration: underline;\n      color: ${({ theme }) => theme.color.blueDefault};\n    }\n\n    .link-box {\n      width: 100%;\n      display: contents;\n      text-align: left;\n      margin: 10px 20px 20px 20px;\n    }\n\n    .btn-box {\n      display: flex;\n      margin: 120px 20px 0 20px;\n      justify-content: space-between;\n\n      button {\n        display: flex;\n        flex: 1;\n      }\n    }\n  }\n`\n","import * as model from 'processes/auth/login-model'\nimport { Wrapper } from './styles'\nimport { useIntl } from 'react-intl'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { PasswordInput } from 'shared/ui/molecules'\nimport { Button, Typography, TextField } from '@material-ui/core'\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    watch,\n    formState: { errors },\n  } = useForm<Record<string, any>>()\n\n  const password = watch('password')\n  const { formatMessage } = useIntl()\n\n  const onSubmit = handleSubmit((data: model.UserInterface) => model.$loginUser(data))\n\n  return (\n    <Wrapper>\n      <Typography variant=\"h5\" gutterBottom className=\"title-h5\">\n        {formatMessage({ id: 'build.our.city.together' })}\n      </Typography>\n\n      <form onSubmit={onSubmit}>\n        <div className=\"form-content\">\n          <TextField\n            className=\"login-input\"\n            placeholder=\"example@mail.com\"\n            error={!!errors?.email}\n            label={!!errors?.email ? errors.email.message : formatMessage({ id: 'email' })}\n            required\n            {...register('email', {\n              required: true,\n              minLength: { value: 10, message: formatMessage({ id: 'min.length.20' }) },\n              maxLength: { value: 30, message: formatMessage({ id: 'max.length.30' }) },\n              pattern: {\n                value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                message: 'wrong email',\n              },\n            })}\n          />\n\n          <PasswordInput password={password} register={register} errors={errors} setValue={setValue} />\n\n          <Link color=\"inherit\" className=\"link\" to=\"/city-builder/forgot-password/\">\n            {formatMessage({ id: 'forgot.password' })}\n          </Link>\n\n          <div className=\"btn-box\">\n            <Button className=\"submit-btn\" variant=\"contained\" type=\"submit\" color=\"primary\">\n              {formatMessage({ id: 'login' })}\n            </Button>\n\n            <Link to=\"/city-builder/registration/\" className=\"link-box\">\n              <Button className=\"submit-btn\" variant=\"contained\">\n                {formatMessage({ id: 'registration' })}\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}